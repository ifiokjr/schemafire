{"version":3,"sources":["../src/schema.ts"],"names":["User","Schema","codec","userCodec","collection","Collection","config","autoValidate","rules","username","uniqueInCollection","Username","usernameCodec","emptyCollection","Relationship","relationshipCodec","staticMethods","createRelationship","schema","data","options","create","id","follower","following","run","Tweet","tweetCodec"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEO,MAAMA,IAAI,GAAG,IAAIC,iBAAJ,CAAW;AAC7BC,EAAAA,KAAK,EAAEC,iBADsB;AAE7BC,EAAAA,UAAU,EAAEC,mBAAWL,IAFM;AAG7BM,EAAAA,MAAM,EAAE;AAAEC,IAAAA,YAAY,EAAE;AAAhB,GAHqB;AAI7B;AACAC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,kBAAkB,EAAEL,mBAAWM;AAAjC;AAAZ;AALsB,CAAX,CAAb;;AAQA,MAAMA,QAAQ,GAAG,IAAIV,iBAAJ,CAAW;AACjCC,EAAAA,KAAK,EAAEU,qBAD0B;AAEjCR,EAAAA,UAAU,EAAEC,mBAAWM,QAFU;AAGjCL,EAAAA,MAAM,EAAE;AAAEC,IAAAA,YAAY,EAAE,KAAhB;AAAuBM,IAAAA,eAAe,EAAE;AAAxC;AAHyB,CAAX,CAAjB;;AAMA,MAAMC,YAAY,GAAG,IAAIb,iBAAJ,CAAW;AACrCC,EAAAA,KAAK,EAAEa,yBAD8B;AAErCX,EAAAA,UAAU,EAAEC,mBAAWS,YAFc;AAGrCE,EAAAA,aAAa,EAAE;AACbC,IAAAA,kBAAkB,EAAE,UAAAC,MAAM;AAAA,aAAI,UAC5BC,IAD4B,EAE5BC,OAA2B,GAAG,EAFF,EAGzB;AACH,eAAOF,MAAM,CAACG,MAAP,CAAc;AAAEF,UAAAA,IAAF;AAAQG,UAAAA,EAAE,EAAE,2BAAeH,IAAI,CAACI,QAApB,EAA8BJ,IAAI,CAACK,SAAnC;AAAZ,SAAd,EAA2EC,GAA3E,CAA+EL,OAA/E,CAAP;AACD,OALyB;AAAA;AADb;AAHsB,CAAX,CAArB;;AAaA,MAAMM,KAAK,GAAG,IAAIzB,iBAAJ,CAAW;AAC9BC,EAAAA,KAAK,EAAEyB,kBADuB;AAE9BvB,EAAAA,UAAU,EAAEC,mBAAWqB;AAFO,CAAX,CAAd","sourcesContent":["import { RunConfig, Schema, TypeOfCreateData } from '@schemafire/firestore';\nimport { Collection, relationshipCodec, tweetCodec, userCodec, usernameCodec } from './codecs';\nimport { relationshipId } from './utils';\n\nexport const User = new Schema({\n  codec: userCodec,\n  collection: Collection.User,\n  config: { autoValidate: true },\n  // Todo implement a rules parser\n  rules: { username: { uniqueInCollection: Collection.Username } },\n});\n\nexport const Username = new Schema({\n  codec: usernameCodec,\n  collection: Collection.Username,\n  config: { autoValidate: false, emptyCollection: true },\n});\n\nexport const Relationship = new Schema({\n  codec: relationshipCodec,\n  collection: Collection.Relationship,\n  staticMethods: {\n    createRelationship: schema => (\n      data: TypeOfCreateData<typeof schema>,\n      options: Partial<RunConfig> = {},\n    ) => {\n      return schema.create({ data, id: relationshipId(data.follower, data.following) }).run(options);\n    },\n  },\n});\n\nexport const Tweet = new Schema({\n  codec: tweetCodec,\n  collection: Collection.Tweet,\n});\n"],"file":"schema.js"}