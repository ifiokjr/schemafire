{"version":3,"sources":["../src/environment.ts"],"names":["Env","isDev","isProd","info","process","env","LOCAL_DEPLOY","require","credential","admin","cert","serviceAccountKey","initializeApp","initialized","settings","timestampsInSnapshots","firestore","debug","allowExpressions","projectId","keyFilename","__dirname","appPathRelativeToRepository"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEO,MAAMA,GAAN,CAAU;AAIf,aAAkBC,KAAlB,GAA0B;AACxB,WAAO,IAAP;AACD;;AAED,aAAkBC,MAAlB,GAA2B;AACzB,WAAO,CAACF,GAAG,CAACC,KAAZ;AACD;;AAOD,aAAkBE,IAAlB,GAAyB;AACvB,WAAOC,OAAO,CAACC,GAAR,CAAYC,YAAZ,KAA6B,MAA7B,GACHC,OAAO,CAAC,kCAAD,CADJ;AAGDC,MAAAA,UAAU,EAAEC,uBAAMD,UAAN,CAAiBE,IAAjB,CAAsBV,GAAG,CAACW,iBAA1B;AAHX,OAIEJ,OAAO,CAAC,YAAD,CAJT,CAAP;AAMD;;AASD,SAAcK,aAAd,GAA8B;AAC5B,QAAIZ,GAAG,CAACa,WAAR,EAAqB;AACnB;AACD;;AACDJ,2BAAMG,aAAN,CAAoBZ,GAAG,CAACG,IAAxB;;AAEA,UAAMW,QAAQ,GAAG;AAAEC,MAAAA,qBAAqB,EAAE;AAAzB,KAAjB;;AACA,UAAMC,SAAS,GAAGP,uBAAMO,SAAN,EAAlB;;AACAA,IAAAA,SAAS,CAACF,QAAV,CAAmBA,QAAnB;AACAd,IAAAA,GAAG,CAACa,WAAJ,GAAkB,IAAlB;AACD;;AA3Cc;;;AAAJb,G,CAEIa,W,GAAc,K;AAFlBb,G,CAYIW,iB,GACbP,OAAO,CAACC,GAAR,CAAYC,YAAZ,KAA6B,MAA7B,GACIC,OAAO,CAAC,mCAAD,CADX,GAEIA,OAAO,CAAC,gBAAD,C;AAfFP,G,CA0BGiB,K,GAAQ,uBAAM;AAC1BC,EAAAA,gBAAgB,EAAE,IADQ;AAE1BC,EAAAA,SAAS,EAAEnB,GAAG,CAACG,IAAJ,CAASgB,SAFM;AAG1BC,EAAAA,WAAW,EAAE,mBAAQC,SAAR,EAAmB,gBAAnB,CAHa;AAI1BC,EAAAA,2BAA2B,EAAE;AAJH,CAAN,C;AAoBxBtB,GAAG,CAACY,aAAJ","sourcesContent":["import { start } from '@google-cloud/debug-agent';\nimport admin from 'firebase-admin';\nimport { resolve } from 'path';\n\nexport class Env {\n  public static functions: any;\n  private static initialized = false;\n\n  public static get isDev() {\n    return true;\n  }\n\n  public static get isProd() {\n    return !Env.isDev;\n  }\n\n  private static serviceAccountKey =\n    process.env.LOCAL_DEPLOY === 'true'\n      ? require('../../../support/secrets/key.json')\n      : require('../secret.json');\n\n  public static get info() {\n    return process.env.LOCAL_DEPLOY === 'true'\n      ? require('../../../support/secrets/db.json')\n      : {\n          credential: admin.credential.cert(Env.serviceAccountKey),\n          ...require('../db.json'),\n        };\n  }\n\n  public static debug = start({\n    allowExpressions: true,\n    projectId: Env.info.projectId,\n    keyFilename: resolve(__dirname, '../secret.json'),\n    appPathRelativeToRepository: '@cloud/firebase',\n  });\n\n  public static initializeApp() {\n    if (Env.initialized) {\n      return;\n    }\n    admin.initializeApp(Env.info);\n\n    const settings = { timestampsInSnapshots: true };\n    const firestore = admin.firestore();\n    firestore.settings(settings);\n    Env.initialized = true;\n  }\n}\n\nEnv.initializeApp();\n"],"file":"environment.js"}