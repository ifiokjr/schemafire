{"version":3,"sources":["../src/codecs.ts"],"names":["Collection","userCodec","t","type","username","strings","minimum","maximum","email","relationshipCodec","follower","documentReference","following","keyof","block","follow","usernameCodec","tweetCodec","message","max","messageObject","UnknownRecord","parent","utils","nullable"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;IAEYA,U;;;WAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,0BAAAA,U;;AAOL,MAAMC,SAAS,GAAGC,CAAC,CAACC,IAAF,CAAO;AAC9B;AACAC,EAAAA,QAAQ,EAAEC,cAAQD,QAAR,CAAiB;AAAEE,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAjB,CAFoB;AAG9BC,EAAAA,KAAK,EAAEH,cAAQG;AAHe,CAAP,CAAlB;;AAMA,MAAMC,iBAAiB,GAAGP,CAAC,CAACC,IAAF,CAAO;AACtC;AACAO,EAAAA,QAAQ,EAAEC,4BAF4B;;AAGtC;AACAC,EAAAA,SAAS,EAAED,4BAJ2B;;AAKtC;;;;AAIAR,EAAAA,IAAI,EAAED,CAAC,CAACW,KAAF,CAAQ;AACZC,IAAAA,KAAK,EAAE,IADK;AAEZC,IAAAA,MAAM,EAAE;AAFI,GAAR;AATgC,CAAP,CAA1B;AAeP;;;;;;AAIO,MAAMC,aAAa,GAAGd,CAAC,CAACC,IAAF,CAAO,EAAP,CAAtB;;AAEA,MAAMc,UAAU,GAAGf,CAAC,CAACC,IAAF,CAAO;AAC/Be,EAAAA,OAAO,EAAEb,cAAQc,GAAR,CAAY,GAAZ,CADsB;AAE/BC,EAAAA,aAAa,EAAElB,CAAC,CAACmB,aAFc;AAG/BC,EAAAA,MAAM,EAAEC,YAAMC,QAAN,CAAeb,4BAAf;AAHuB,CAAP,CAAnB","sourcesContent":["import { strings, utils } from '@schemafire/core';\nimport { documentReference } from '@schemafire/firestore';\nimport * as t from 'io-ts';\n\nexport enum Collection {\n  User = 'users',\n  Relationship = 'relationships',\n  Username = 'usernames',\n  Tweet = 'tweets',\n}\n\nexport const userCodec = t.type({\n  /** A username set at first sign up */\n  username: strings.username({ minimum: 5, maximum: 20 }),\n  email: strings.email,\n});\n\nexport const relationshipCodec = t.type({\n  /** The actor instigating the action */\n  follower: documentReference,\n  /** The recipient of this action */\n  following: documentReference,\n  /**\n   * Action can be follow or block\n   * @default block\n   */\n  type: t.keyof({\n    block: null,\n    follow: null,\n  }),\n});\n\n/**\n * This has no values just the id (username) is important\n * Todo add configuration option for emptyCollection\n */\nexport const usernameCodec = t.type({});\n\nexport const tweetCodec = t.type({\n  message: strings.max(280),\n  messageObject: t.UnknownRecord,\n  parent: utils.nullable(documentReference),\n});\n"],"file":"codecs.js"}